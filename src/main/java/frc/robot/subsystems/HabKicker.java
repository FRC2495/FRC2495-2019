package frc.robot.subsystems;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.command.Subsystem;

import frc.robot.interfaces.IHabKicker.Position;
import frc.robot.Ports;


// a class to raise the outer/main drivetrain (by lowering the inner/mini drivetrain)
public class HabKicker extends Subsystem {
	
	static final int WAIT_MS = 1000;
	
	DoubleSolenoid inOut;

	public HabKicker() {
		// the double solenoid valve will send compressed air from the tank wherever needed
		inOut = new DoubleSolenoid(Ports.CAN.PCM, Ports.PCM.KICKER_IN, Ports.PCM.KICKER_OUT); // make sure ports are properly sets in Ports.java	
	}
    
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

	public void setPosition(Position pos)
	{
		switch(pos)
		{
			case IN:
			{
				inOut.set(DoubleSolenoid.Value.kReverse); // adjust direction if needed
				break;
			}
			case OUT:
			{
				inOut.set(DoubleSolenoid.Value.kForward); // adjust direction if needed
				break;
			}
			default:
			{
				// do nothing
			}
		}
	}

	public Position getPosition()
	{
		DoubleSolenoid.Value value = inOut.get();
		
		switch(value)
		{
			case kReverse:
			{
				return Position.IN;
			}
			case kForward:
			{
				return Position.OUT;
			}
			default:
			{
				return Position.UNKNOWN;
			}
		}
	}
}
